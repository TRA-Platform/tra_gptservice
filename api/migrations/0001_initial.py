# Generated by Django 4.2.2 on 2025-02-27 22:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApiKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='API Key')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('usage', models.IntegerField(default=0, verbose_name='Usage')),
                ('openai_api_key', models.CharField(default='sk-API...', max_length=100, verbose_name='OpenAI API Key')),
                ('deepseek_api_key', models.CharField(default='sk-API...', max_length=100, verbose_name='Deepseek API Key')),
                ('proxy_url', models.CharField(default='http://user:pass@ip:port', max_length=100, verbose_name='Proxy URL')),
            ],
            options={
                'verbose_name_plural': 'Api Keys',
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.TextField(verbose_name='Request')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='Timestamp')),
                ('engine', models.CharField(default='gpt-3.5-turbo-16k', max_length=30)),
                ('temperature', models.FloatField(blank=True, default=0.7, null=True, verbose_name='Temperature')),
                ('answer', models.TextField(blank=True, default='', verbose_name='Answer')),
                ('max_tokens', models.IntegerField(blank=True, default=4000, null=True, verbose_name='Max Tokens')),
                ('top_p', models.FloatField(blank=True, default=1.0, null=True, verbose_name='Top P')),
                ('frequency_penalty', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Frequency Penalty')),
                ('presence_penalty', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Presence Penalty')),
                ('is_processing', models.BooleanField(default=False, verbose_name='Is Processing')),
                ('is_cancelled', models.BooleanField(default=False, verbose_name='Is Cancelled')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Is Completed')),
                ('is_failed', models.BooleanField(default=False, verbose_name='Is Failed')),
                ('is_json', models.BooleanField(default=False, verbose_name='Is JSON')),
                ('celery_subtask_id', models.CharField(blank=True, default='', max_length=100, verbose_name='Celery Subtask ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Создано')),
                ('generation_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Начало генерации')),
                ('generation_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Окончание генерации')),
                ('asynchronous', models.BooleanField(default=True, verbose_name='Асинхронно')),
                ('prompt_tokens', models.IntegerField(default=0, verbose_name='Prompt Tokens')),
                ('total_tokens', models.IntegerField(default=0, verbose_name='Total Tokens')),
                ('completion_tokens', models.IntegerField(default=0, verbose_name='Completion Tokens')),
                ('chat_completion', models.CharField(blank=True, default='', max_length=100, verbose_name='Chat Completion')),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.apikey', verbose_name='API Key')),
            ],
            options={
                'verbose_name_plural': 'Requests',
            },
        ),
    ]
